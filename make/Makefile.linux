MAIN := tuo
SRCS := $(wildcard *.cpp)
OBJS := $(patsubst %.cpp,obj/%.o,$(SRCS))
INCS := $(wildcard *.h)

ifndef VERSION
VERSION = $(shell git describe --tags --abbrev=0 --dirty)
ifeq ($(VERSION),)
VERSION=NO VERSION
${warning "VERSION is not set (USING NO VERSION instead), use make VERSION=vX.XX.X"}
endif
endif


CPPFLAGSN := -Wall -Werror -std=gnu++14 -Ofast -DNDEBUG -DNQUEST -DTYRANT_OPTIMIZER_VERSION='"$(VERSION)"' -fopenmp -DNTIMER
LDFLAGSN := -lboost_system -lboost_thread -lboost_filesystem -lboost_regex -lboost_timer -lpthread -lgomp 

CPPFLAGS := -Wall -Werror -std=gnu++14 -Ofast -DNDEBUG -DNQUEST -DTYRANT_OPTIMIZER_VERSION='"$(VERSION)"' -DNTIMER
LDFLAGS := -lboost_system -lboost_thread -lboost_filesystem -lboost_regex -lboost_timer -lpthread

all: $(MAIN)

obj/.stamp:
	mkdir -p obj
	touch obj/.stamp

obj/%.o: %.cpp $(INCS) obj/.stamp
	$(CXX) $(CPPFLAGS) -I extern/hPMML/include -o $@ -c $<

$(MAIN): $(OBJS)
	$(CXX) -o $@ $(OBJS) $(LDFLAGS)

rebuild: clean all

clean:
	rm -rf $(MAIN) obj/*.o
